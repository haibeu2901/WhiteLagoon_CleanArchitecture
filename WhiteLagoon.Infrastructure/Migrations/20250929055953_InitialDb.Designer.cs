// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhiteLagoon.Infrastructure.Data;

#nullable disable

namespace WhiteLagoon.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250929055953_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.Villa", b =>
                {
                    b.Property<int>("VillaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VillaId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("VillaId");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            VillaId = 1,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(1895),
                            Description = "A luxurious villa with stunning sea views.",
                            ImageUrl = "https://example.com/images/royal-villa.jpg",
                            IsDeleted = false,
                            Name = "Royal Villa",
                            Occupancy = 4,
                            Price = 500.0,
                            Sqft = 550
                        },
                        new
                        {
                            VillaId = 2,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(1898),
                            Description = "A premium villa with a private pool and garden.",
                            ImageUrl = "https://example.com/images/premium-pool-villa.jpg",
                            IsDeleted = false,
                            Name = "Premium Pool Villa",
                            Occupancy = 4,
                            Price = 400.0,
                            Sqft = 500
                        },
                        new
                        {
                            VillaId = 3,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(1900),
                            Description = "A mornal villa with a no pool and a small garden.",
                            ImageUrl = "https://example.com/images/normal-garden-villa.jpg",
                            IsDeleted = false,
                            Name = "Normal Pool Villa",
                            Occupancy = 4,
                            Price = 200.0,
                            Sqft = 250
                        });
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.VillaRoom", b =>
                {
                    b.Property<int>("VillaNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SpecialDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("VillaNo");

                    b.HasIndex("VillaId");

                    b.ToTable("VillaRooms");

                    b.HasData(
                        new
                        {
                            VillaNo = 101,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(2002),
                            IsDeleted = false,
                            VillaId = 1
                        },
                        new
                        {
                            VillaNo = 102,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(2005),
                            IsDeleted = false,
                            VillaId = 1
                        },
                        new
                        {
                            VillaNo = 103,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(2006),
                            IsDeleted = false,
                            VillaId = 1
                        },
                        new
                        {
                            VillaNo = 104,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(2006),
                            IsDeleted = false,
                            VillaId = 1
                        },
                        new
                        {
                            VillaNo = 201,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(2007),
                            IsDeleted = false,
                            VillaId = 2
                        },
                        new
                        {
                            VillaNo = 202,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(2008),
                            IsDeleted = false,
                            VillaId = 2
                        },
                        new
                        {
                            VillaNo = 203,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(2009),
                            IsDeleted = false,
                            VillaId = 2
                        },
                        new
                        {
                            VillaNo = 301,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(2010),
                            IsDeleted = false,
                            VillaId = 3
                        },
                        new
                        {
                            VillaNo = 302,
                            CreatedAt = new DateTime(2025, 9, 29, 12, 59, 53, 193, DateTimeKind.Local).AddTicks(2011),
                            IsDeleted = false,
                            VillaId = 3
                        });
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.VillaRoom", b =>
                {
                    b.HasOne("WhiteLagoon.Domain.Entities.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
